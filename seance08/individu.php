<?php
require 'iHumain.php';
abstract class Individu implements iHumain
{

    protected $nom;
    protected $prenom;
    protected $sexe;
    protected $revenu;
    protected $conges;

    /**
     * @param $nom
     * @param $prenom
     * @param $sexe
     * @param $revenu
     * @param $conges
     */
    public function __construct($nom, $prenom, $sexe)
    {
        $this->nom = $nom;
        $this->prenom = $prenom;
        $this->sexe = $sexe;
    }

    public function travailler($nbHeures)
    {
        // TODO: Implement travailler() method.
        //$baseHoraire = 9.5;
        $HeureTravail = $nbHeures * 9.5;
        $this->revenu += $HeureTravail;
    }

    public function reposer($nbJours)
    {
        // TODO: Implement reposer() method.
        $this->conges += $nbJours;
    }

    public function sePresente()
    {
        // TODO: Implement sePresente() method.
        return 'Le nom et le prénom de l\'individu : '.$this->nom.' '.$this->prenom.'<br>';
    }

    public function RAZrevenu(){
        $this->revenu = 0;
    }

    public function RAZconges(){
        $this->conges = 0;
    }

    public function declareSalaire(){
        return $this->nom.' '.$this->prenom.' touche un salaire de '.$this->revenu.'<br>';
    }
}

class Etudiant extends Individu {

    protected $numEtudiant;
    protected $age = 0;
    protected $formation = '';
    protected $resultat = '';
    static $nbEtudiants;

    /**
     * @param $numEtudiant
     * @param int $age
     * @param string $formation
     * @param string $resultat
     */
    public function __construct($nom, $prenom, $sexe, $numEtudiant, $formation, $age)
    {
        parent::__construct($nom, $prenom, $sexe);
        $this->numEtudiant = $numEtudiant;
        $this->formation = $formation;
        $this->age = $this->setAge($age);
        self::$nbEtudiants++;
    }

    public static function getNombreIndividus(){
        return 'N° : '.self::$nbEtudiants.'<br>';
    }

    public function __destruct()
    {
        // TODO: Implement __destruct() method.
        self::$nbEtudiants--;
    }

    /**
     * @return int
     */
    public function getAge()
    {
        return $this->age;
    }

    /**
     * @param int $age
     */
    public function setAge($age)
    {
        $this->age = $age;
    }



    public function travailler($nbHeures)
    {
        if ($this->age <= 18){
            parent::travailler($nbHeures)*0.8;
        } else {
            parent::travailler($nbHeures);
        }
    }

    public function evaluer($noteExamen){
        if ($noteExamen >= 10){
            $valeur = 'reçu';
        } else {
            $valeur = 'ajourné';
        }
        return 'Le candidat '.$this->nom.' '.$this->prenom.' est '.$valeur.'<br>';
    }
}

final class Etudiant_mmi extends Etudiant {

    private $option = '';

    /**
     * @param string $option
     */
    public function __construct($nom, $prenom, $sexe, $numEtudiant, $formation, $age)
    {
        parent::__construct($nom, $prenom, $sexe, $numEtudiant, $formation, $age);
    }

    public function quelleOption(){
        return 'L\'élève '.$this->nom.' '.$this->prenom.' à choisi(e) l\'option '.$this->option.'<br>';
    }

    public function ChangerOption($option){
        $this->option = $option;
    }

    public function sePresente()
    {
        return parent::sePresente().' et je suis en MMI. <br>';
        // TODO: Change the autogenerated stub
    }
}
